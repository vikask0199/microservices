# without nginx
version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
    environment:
      - NODE_ENV=development
    ports:
      - "5000:5000"
    networks:
      - my_network

  service-call-gateway:
    build:
      context: ./service-call-gateway
    environment:
      - NODE_ENV=development
    ports:
      - "10000:10000"
    networks:
      - my_network

  service1-1:
    build:
      context: ./service1
    environment:
      - NODE_ENV=development
    ports:
      - "1000:1000"
    networks:
      - my_network

  service1-2:
    build:
      context: ./service1
    environment:
      - NODE_ENV=development
    ports:
      - "1001:1000"
    networks:
      - my_network

  service2-1:
    build:
      context: ./service2
    environment:
      - NODE_ENV=development
    ports:
      - "2000:2000"
    networks:
      - my_network

  service2-2:
    build:
      context: ./service2
    environment:
      - NODE_ENV=development
    ports:
      - "2001:2000"
    networks:
      - my_network

  service3-1:
    build:
      context: ./service3
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    networks:
      - my_network

  service3-2:
    build:
      context: ./service3
    environment:
      - NODE_ENV=development
    ports:
      - "3001:3000"
    networks:
      - my_network

  umbra:
    build:
      context: ./umbra
    environment:
      - NODE_ENV=development
    ports:
      - "6000:6000"
    networks:
      - my_network

  iceye:
    build:
      context: ./iceye
    environment:
      - NODE_ENV=development
    ports:
      - "7000:7000"
    networks:
      - my_network

  planet:
    build:
      context: ./planet
    environment:
      - NODE_ENV=development
    ports:
      - "8000:8000"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge





# Activate nginx
# version: '3.8'
# services:
#   nginx:
#     image: nginx:latest
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - api-gateway
#       - service1-1
#       - service1-2
#       - service2-1
#       - service2-2
#       - service3-1
#       - service3-2
#       - umbra
#       - iceye
#       - planet
#     networks:
#       - my_network

#   api-gateway:
#     build:
#       context: ./api-gateway
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service-call-gateway:
#     build:
#       context: ./service-call-gateway
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service1-1:
#     build:
#       context: ./service1
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service1-2:
#     build:
#       context: ./service1
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service2-1:
#     build:
#       context: ./service2
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service2-2:
#     build:
#       context: ./service2
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service3-1:
#     build:
#       context: ./service3
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   service3-2:
#     build:
#       context: ./service3
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   umbra:
#     build:
#       context: ./umbra
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   iceye:
#     build:
#       context: ./iceye
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

#   planet:
#     build:
#       context: ./planet
#     environment:
#       - NODE_ENV=development
#     networks:
#       - my_network

# networks:
#   my_network:
#     driver: bridge
