# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include mime.types;
#     default_type application/octet-stream;
#     sendfile on;
#     error_log /var/log/nginx/error.log;
#     upstream api-gateway {
#         server api-gateway:5000;
#     }
#     upstream service1 {
#         server service1:1000;
#     }
#     upstream service2 {
#         server service2:2000;
#     }
#     upstream service3 {
#         server service3:3000;
#     }
#     server {
#         listen 80;
#         server_name localhost;
#         location / {
#             proxy_pass http://api-gateway/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#         location /service1/ {
#             proxy_pass http://service1/;
#         }
#         location /service2/ {
#             # First proxy to the JWT validation service
#             proxy_pass http://api-gateway/validate;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_intercept_errors on;
#             error_page 401 = @error401;
#             # If JWT validation is successful, forward the request to service2
#             location / {
#                 internal;
#                 proxy_pass http://service2/;
#                 proxy_set_header Host $host;
#                 proxy_set_header X-Real-IP $remote_addr;
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 proxy_set_header X-Forwarded-Proto $scheme;
#             }
#         }
#         location @error401 {
#             internal;
#             return 401 "Unauthorized";
#         }
#         location /service3/ {
#             proxy_pass http://service3/;
#         }
#     }
# }
# worker_processes 1;
# events {
#     worker_connections 1024;
# }
# http {
#     include mime.types;
#     default_type application/octet-stream;
#     sendfile on;
#     error_log /var/log/nginx/error.log;
#     upstream api-gateway {
#         server api-gateway:5000;
#     }
#     upstream service1 {
#         server service1:1000;
#     }
#     upstream service2 {
#         server service2:2000;
#     }
#     upstream service3 {
#         server service3:3000;
#     }
#     server {
#         listen 80;
#         server_name localhost;
#         location / {
#             proxy_pass http://api-gateway/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#         location /service1/ {
#             proxy_pass http://service1/;
#         }
#         location /service2/ {
#             proxy_pass http://service2/;
#         }
#         location /service3/ {
#             proxy_pass http://service3/;
#         }
#     }
# }
worker_processes 1;
events {
    worker_connections 1024;
}
http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    error_log /var/log/nginx/error.log;

    upstream api-gateway {
        server api-gateway:5000;
    }

    upstream service1 {
        least_conn; # Use least connections load balancing algorithm
        server service1-1:1000 max_conns=2;
        server service1-2:1000 max_conns=2;
    }

    upstream service2 {
        server service2-1:2000;
        server service2-2:2000;
    }

    upstream service3 {
        server service3-1:3000;
        server service3-2:3000;
    }

    server {
        listen 80;
        server_name localhost;

        location /api-gateway/ {
            proxy_pass http://api-gateway/;
            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /service1/ {
            auth_request /api-gateway/validate;
            auth_request_set $auth_status $upstream_status;
            proxy_pass http://service1/;
        }

        location /service2/ {
            proxy_pass http://service2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /service3/ {
            proxy_pass http://service3/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
